// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y        float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z        float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	Rx       float32 `protobuf:"fixed32,4,opt,name=rx,proto3" json:"rx,omitempty"` //각은 오일러로 받도록 하였음
	Ry       float32 `protobuf:"fixed32,5,opt,name=ry,proto3" json:"ry,omitempty"`
	Rz       float32 `protobuf:"fixed32,6,opt,name=rz,proto3" json:"rz,omitempty"`
	PlayerId string  `protobuf:"bytes,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PlayerPosition) Reset() {
	*x = PlayerPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPosition) ProtoMessage() {}

func (x *PlayerPosition) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPosition.ProtoReflect.Descriptor instead.
func (*PlayerPosition) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerPosition) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PlayerPosition) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *PlayerPosition) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *PlayerPosition) GetRx() float32 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *PlayerPosition) GetRy() float32 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *PlayerPosition) GetRz() float32 {
	if x != nil {
		return x.Rz
	}
	return 0
}

func (x *PlayerPosition) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type LoginMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *LoginMessage) Reset() {
	*x = LoginMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMessage) ProtoMessage() {}

func (x *LoginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMessage.ProtoReflect.Descriptor instead.
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *LoginMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type PlayerAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerAnimState string  `protobuf:"bytes,1,opt,name=player_anim_state,json=playerAnimState,proto3" json:"player_anim_state,omitempty"`
	PlayerId        string  `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SpeedForward    float32 `protobuf:"fixed32,3,opt,name=SpeedForward,proto3" json:"SpeedForward,omitempty"`
	SpeedRight      float32 `protobuf:"fixed32,4,opt,name=SpeedRight,proto3" json:"SpeedRight,omitempty"`
}

func (x *PlayerAnimation) Reset() {
	*x = PlayerAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAnimation) ProtoMessage() {}

func (x *PlayerAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAnimation.ProtoReflect.Descriptor instead.
func (*PlayerAnimation) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerAnimation) GetPlayerAnimState() string {
	if x != nil {
		return x.PlayerAnimState
	}
	return ""
}

func (x *PlayerAnimation) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerAnimation) GetSpeedForward() float32 {
	if x != nil {
		return x.SpeedForward
	}
	return 0
}

func (x *PlayerAnimation) GetSpeedRight() float32 {
	if x != nil {
		return x.SpeedRight
	}
	return 0
}

type SpawnPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string  `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	X        float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y        float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Z        float32 `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	Rx       float32 `protobuf:"fixed32,5,opt,name=rx,proto3" json:"rx,omitempty"`
	Ry       float32 `protobuf:"fixed32,6,opt,name=ry,proto3" json:"ry,omitempty"`
	Rz       float32 `protobuf:"fixed32,7,opt,name=rz,proto3" json:"rz,omitempty"`
}

func (x *SpawnPlayer) Reset() {
	*x = SpawnPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnPlayer) ProtoMessage() {}

func (x *SpawnPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnPlayer.ProtoReflect.Descriptor instead.
func (*SpawnPlayer) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *SpawnPlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SpawnPlayer) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SpawnPlayer) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SpawnPlayer) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *SpawnPlayer) GetRx() float32 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *SpawnPlayer) GetRy() float32 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *SpawnPlayer) GetRz() float32 {
	if x != nil {
		return x.Rz
	}
	return 0
}

type LogoutMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *LogoutMessage) Reset() {
	*x = LogoutMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutMessage) ProtoMessage() {}

func (x *LogoutMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutMessage.ProtoReflect.Descriptor instead.
func (*LogoutMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type RaceFinishMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	FinishTime int64  `protobuf:"varint,2,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
}

func (x *RaceFinishMessage) Reset() {
	*x = RaceFinishMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceFinishMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceFinishMessage) ProtoMessage() {}

func (x *RaceFinishMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceFinishMessage.ProtoReflect.Descriptor instead.
func (*RaceFinishMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *RaceFinishMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *RaceFinishMessage) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

type CostumeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId          string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PlayerCostumeType int32  `protobuf:"varint,2,opt,name=playerCostumeType,proto3" json:"playerCostumeType,omitempty"`
	PlayerCostumeName string `protobuf:"bytes,3,opt,name=playerCostumeName,proto3" json:"playerCostumeName,omitempty"`
	OtherPlayerId     string `protobuf:"bytes,4,opt,name=otherPlayerId,proto3" json:"otherPlayerId,omitempty"`
}

func (x *CostumeMessage) Reset() {
	*x = CostumeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostumeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostumeMessage) ProtoMessage() {}

func (x *CostumeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostumeMessage.ProtoReflect.Descriptor instead.
func (*CostumeMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CostumeMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CostumeMessage) GetPlayerCostumeType() int32 {
	if x != nil {
		return x.PlayerCostumeType
	}
	return 0
}

func (x *CostumeMessage) GetPlayerCostumeName() string {
	if x != nil {
		return x.PlayerCostumeName
	}
	return ""
}

func (x *CostumeMessage) GetOtherPlayerId() string {
	if x != nil {
		return x.OtherPlayerId
	}
	return ""
}

type RaceEndMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *RaceEndMessage) Reset() {
	*x = RaceEndMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceEndMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceEndMessage) ProtoMessage() {}

func (x *RaceEndMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceEndMessage.ProtoReflect.Descriptor instead.
func (*RaceEndMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *RaceEndMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GameMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*GameMessage_PlayerPosition
	//	*GameMessage_Chat
	//	*GameMessage_Login
	//	*GameMessage_PlayerAnimState
	//	*GameMessage_SpawnPlayer
	//	*GameMessage_SpawnExistingPlayer
	//	*GameMessage_Logout
	//	*GameMessage_RaceFinish
	//	*GameMessage_PlayerCostume
	//	*GameMessage_RaceEnd
	//	*GameMessage_SpectatorState
	//	*GameMessage_PlayerCount
	//	*GameMessage_PlayerIndex
	//	*GameMessage_PlayerGrabInfo
	Message isGameMessage_Message `protobuf_oneof:"message"`
}

func (x *GameMessage) Reset() {
	*x = GameMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMessage) ProtoMessage() {}

func (x *GameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMessage.ProtoReflect.Descriptor instead.
func (*GameMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (m *GameMessage) GetMessage() isGameMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *GameMessage) GetPlayerPosition() *PlayerPosition {
	if x, ok := x.GetMessage().(*GameMessage_PlayerPosition); ok {
		return x.PlayerPosition
	}
	return nil
}

func (x *GameMessage) GetChat() *ChatMessage {
	if x, ok := x.GetMessage().(*GameMessage_Chat); ok {
		return x.Chat
	}
	return nil
}

func (x *GameMessage) GetLogin() *LoginMessage {
	if x, ok := x.GetMessage().(*GameMessage_Login); ok {
		return x.Login
	}
	return nil
}

func (x *GameMessage) GetPlayerAnimState() *PlayerAnimation {
	if x, ok := x.GetMessage().(*GameMessage_PlayerAnimState); ok {
		return x.PlayerAnimState
	}
	return nil
}

func (x *GameMessage) GetSpawnPlayer() *SpawnPlayer {
	if x, ok := x.GetMessage().(*GameMessage_SpawnPlayer); ok {
		return x.SpawnPlayer
	}
	return nil
}

func (x *GameMessage) GetSpawnExistingPlayer() *SpawnPlayer {
	if x, ok := x.GetMessage().(*GameMessage_SpawnExistingPlayer); ok {
		return x.SpawnExistingPlayer
	}
	return nil
}

func (x *GameMessage) GetLogout() *LogoutMessage {
	if x, ok := x.GetMessage().(*GameMessage_Logout); ok {
		return x.Logout
	}
	return nil
}

func (x *GameMessage) GetRaceFinish() *RaceFinishMessage {
	if x, ok := x.GetMessage().(*GameMessage_RaceFinish); ok {
		return x.RaceFinish
	}
	return nil
}

func (x *GameMessage) GetPlayerCostume() *CostumeMessage {
	if x, ok := x.GetMessage().(*GameMessage_PlayerCostume); ok {
		return x.PlayerCostume
	}
	return nil
}

func (x *GameMessage) GetRaceEnd() *RaceEndMessage {
	if x, ok := x.GetMessage().(*GameMessage_RaceEnd); ok {
		return x.RaceEnd
	}
	return nil
}

func (x *GameMessage) GetSpectatorState() *SpectatorStateMessage {
	if x, ok := x.GetMessage().(*GameMessage_SpectatorState); ok {
		return x.SpectatorState
	}
	return nil
}

func (x *GameMessage) GetPlayerCount() *PlayerCountUpdate {
	if x, ok := x.GetMessage().(*GameMessage_PlayerCount); ok {
		return x.PlayerCount
	}
	return nil
}

func (x *GameMessage) GetPlayerIndex() *PlayerIndexMessage {
	if x, ok := x.GetMessage().(*GameMessage_PlayerIndex); ok {
		return x.PlayerIndex
	}
	return nil
}

func (x *GameMessage) GetPlayerGrabInfo() *PlayerGrabInfo {
	if x, ok := x.GetMessage().(*GameMessage_PlayerGrabInfo); ok {
		return x.PlayerGrabInfo
	}
	return nil
}

type isGameMessage_Message interface {
	isGameMessage_Message()
}

type GameMessage_PlayerPosition struct {
	PlayerPosition *PlayerPosition `protobuf:"bytes,1,opt,name=player_position,json=playerPosition,proto3,oneof"`
}

type GameMessage_Chat struct {
	Chat *ChatMessage `protobuf:"bytes,2,opt,name=chat,proto3,oneof"`
}

type GameMessage_Login struct {
	Login *LoginMessage `protobuf:"bytes,3,opt,name=login,proto3,oneof"`
}

type GameMessage_PlayerAnimState struct {
	PlayerAnimState *PlayerAnimation `protobuf:"bytes,4,opt,name=player_anim_state,json=playerAnimState,proto3,oneof"`
}

type GameMessage_SpawnPlayer struct {
	SpawnPlayer *SpawnPlayer `protobuf:"bytes,5,opt,name=spawnPlayer,proto3,oneof"`
}

type GameMessage_SpawnExistingPlayer struct {
	SpawnExistingPlayer *SpawnPlayer `protobuf:"bytes,6,opt,name=spawnExistingPlayer,proto3,oneof"`
}

type GameMessage_Logout struct {
	Logout *LogoutMessage `protobuf:"bytes,7,opt,name=logout,proto3,oneof"`
}

type GameMessage_RaceFinish struct {
	RaceFinish *RaceFinishMessage `protobuf:"bytes,8,opt,name=race_finish,json=raceFinish,proto3,oneof"`
}

type GameMessage_PlayerCostume struct {
	PlayerCostume *CostumeMessage `protobuf:"bytes,9,opt,name=player_costume,json=playerCostume,proto3,oneof"`
}

type GameMessage_RaceEnd struct {
	RaceEnd *RaceEndMessage `protobuf:"bytes,10,opt,name=race_end,json=raceEnd,proto3,oneof"`
}

type GameMessage_SpectatorState struct {
	SpectatorState *SpectatorStateMessage `protobuf:"bytes,11,opt,name=spectator_state,json=spectatorState,proto3,oneof"`
}

type GameMessage_PlayerCount struct {
	PlayerCount *PlayerCountUpdate `protobuf:"bytes,12,opt,name=player_count,json=playerCount,proto3,oneof"`
}

type GameMessage_PlayerIndex struct {
	PlayerIndex *PlayerIndexMessage `protobuf:"bytes,13,opt,name=playerIndex,proto3,oneof"`
}

type GameMessage_PlayerGrabInfo struct {
	PlayerGrabInfo *PlayerGrabInfo `protobuf:"bytes,14,opt,name=playerGrabInfo,proto3,oneof"`
}

func (*GameMessage_PlayerPosition) isGameMessage_Message() {}

func (*GameMessage_Chat) isGameMessage_Message() {}

func (*GameMessage_Login) isGameMessage_Message() {}

func (*GameMessage_PlayerAnimState) isGameMessage_Message() {}

func (*GameMessage_SpawnPlayer) isGameMessage_Message() {}

func (*GameMessage_SpawnExistingPlayer) isGameMessage_Message() {}

func (*GameMessage_Logout) isGameMessage_Message() {}

func (*GameMessage_RaceFinish) isGameMessage_Message() {}

func (*GameMessage_PlayerCostume) isGameMessage_Message() {}

func (*GameMessage_RaceEnd) isGameMessage_Message() {}

func (*GameMessage_SpectatorState) isGameMessage_Message() {}

func (*GameMessage_PlayerCount) isGameMessage_Message() {}

func (*GameMessage_PlayerIndex) isGameMessage_Message() {}

func (*GameMessage_PlayerGrabInfo) isGameMessage_Message() {}

type MatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Waiting  bool   `protobuf:"varint,2,opt,name=waiting,proto3" json:"waiting,omitempty"`
}

func (x *MatchingRequest) Reset() {
	*x = MatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingRequest) ProtoMessage() {}

func (x *MatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingRequest.ProtoReflect.Descriptor instead.
func (*MatchingRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *MatchingRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *MatchingRequest) GetWaiting() bool {
	if x != nil {
		return x.Waiting
	}
	return false
}

type MatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameServerAddress string   `protobuf:"bytes,1,opt,name=game_server_address,json=gameServerAddress,proto3" json:"game_server_address,omitempty"`
	Success           bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	MapName           []string `protobuf:"bytes,3,rep,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
	MatchingSeed      int32    `protobuf:"varint,4,opt,name=matching_seed,json=matchingSeed,proto3" json:"matching_seed,omitempty"`
}

func (x *MatchingResponse) Reset() {
	*x = MatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingResponse) ProtoMessage() {}

func (x *MatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingResponse.ProtoReflect.Descriptor instead.
func (*MatchingResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *MatchingResponse) GetGameServerAddress() string {
	if x != nil {
		return x.GameServerAddress
	}
	return ""
}

func (x *MatchingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MatchingResponse) GetMapName() []string {
	if x != nil {
		return x.MapName
	}
	return nil
}

func (x *MatchingResponse) GetMatchingSeed() int32 {
	if x != nil {
		return x.MatchingSeed
	}
	return 0
}

type MatchingUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPlayers  int32 `protobuf:"varint,1,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	RequiredPlayers int32 `protobuf:"varint,2,opt,name=required_players,json=requiredPlayers,proto3" json:"required_players,omitempty"`
}

func (x *MatchingUpdate) Reset() {
	*x = MatchingUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingUpdate) ProtoMessage() {}

func (x *MatchingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingUpdate.ProtoReflect.Descriptor instead.
func (*MatchingUpdate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *MatchingUpdate) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *MatchingUpdate) GetRequiredPlayers() int32 {
	if x != nil {
		return x.RequiredPlayers
	}
	return 0
}

type MatchingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Matching:
	//
	//	*MatchingMessage_MatchingRequest
	//	*MatchingMessage_MatchingResponse
	//	*MatchingMessage_MatchingUpdate
	Matching isMatchingMessage_Matching `protobuf_oneof:"matching"`
}

func (x *MatchingMessage) Reset() {
	*x = MatchingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingMessage) ProtoMessage() {}

func (x *MatchingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingMessage.ProtoReflect.Descriptor instead.
func (*MatchingMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (m *MatchingMessage) GetMatching() isMatchingMessage_Matching {
	if m != nil {
		return m.Matching
	}
	return nil
}

func (x *MatchingMessage) GetMatchingRequest() *MatchingRequest {
	if x, ok := x.GetMatching().(*MatchingMessage_MatchingRequest); ok {
		return x.MatchingRequest
	}
	return nil
}

func (x *MatchingMessage) GetMatchingResponse() *MatchingResponse {
	if x, ok := x.GetMatching().(*MatchingMessage_MatchingResponse); ok {
		return x.MatchingResponse
	}
	return nil
}

func (x *MatchingMessage) GetMatchingUpdate() *MatchingUpdate {
	if x, ok := x.GetMatching().(*MatchingMessage_MatchingUpdate); ok {
		return x.MatchingUpdate
	}
	return nil
}

type isMatchingMessage_Matching interface {
	isMatchingMessage_Matching()
}

type MatchingMessage_MatchingRequest struct {
	MatchingRequest *MatchingRequest `protobuf:"bytes,1,opt,name=matching_request,json=matchingRequest,proto3,oneof"` // 매칭 요청 추가, 클라 -> 서버
}

type MatchingMessage_MatchingResponse struct {
	MatchingResponse *MatchingResponse `protobuf:"bytes,2,opt,name=matching_response,json=matchingResponse,proto3,oneof"` // 매칭 응답 추가, 서버 -> 클라
}

type MatchingMessage_MatchingUpdate struct {
	MatchingUpdate *MatchingUpdate `protobuf:"bytes,3,opt,name=matching_update,json=matchingUpdate,proto3,oneof"` // 매칭 상태 업데이트 추가
}

func (*MatchingMessage_MatchingRequest) isMatchingMessage_Matching() {}

func (*MatchingMessage_MatchingResponse) isMatchingMessage_Matching() {}

func (*MatchingMessage_MatchingUpdate) isMatchingMessage_Matching() {}

type SpectatorStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                     // 관전자 ID
	IsSpectating   bool   `protobuf:"varint,2,opt,name=is_spectating,json=isSpectating,proto3" json:"is_spectating,omitempty"`        // 관전 모드 여부
	TargetPlayerId string `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"` // 관전 대상 플레이어 ID
}

func (x *SpectatorStateMessage) Reset() {
	*x = SpectatorStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpectatorStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpectatorStateMessage) ProtoMessage() {}

func (x *SpectatorStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpectatorStateMessage.ProtoReflect.Descriptor instead.
func (*SpectatorStateMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *SpectatorStateMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SpectatorStateMessage) GetIsSpectating() bool {
	if x != nil {
		return x.IsSpectating
	}
	return false
}

func (x *SpectatorStateMessage) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

type PlayerCountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentAlive int32 `protobuf:"varint,1,opt,name=current_alive,json=currentAlive,proto3" json:"current_alive,omitempty"` // 현재 생존 플레이어 수
	TotalPlayers int32 `protobuf:"varint,2,opt,name=total_players,json=totalPlayers,proto3" json:"total_players,omitempty"` // 총 플레이어 수
	QualifyLimit int32 `protobuf:"varint,3,opt,name=qualify_limit,json=qualifyLimit,proto3" json:"qualify_limit,omitempty"` // 통과할 플레이어 수
}

func (x *PlayerCountUpdate) Reset() {
	*x = PlayerCountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCountUpdate) ProtoMessage() {}

func (x *PlayerCountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCountUpdate.ProtoReflect.Descriptor instead.
func (*PlayerCountUpdate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerCountUpdate) GetCurrentAlive() int32 {
	if x != nil {
		return x.CurrentAlive
	}
	return 0
}

func (x *PlayerCountUpdate) GetTotalPlayers() int32 {
	if x != nil {
		return x.TotalPlayers
	}
	return 0
}

func (x *PlayerCountUpdate) GetQualifyLimit() int32 {
	if x != nil {
		return x.QualifyLimit
	}
	return 0
}

type RoundStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentRound     int32    `protobuf:"varint,1,opt,name=current_round,json=currentRound,proto3" json:"current_round,omitempty"`
	PlayersRequired  int32    `protobuf:"varint,2,opt,name=players_required,json=playersRequired,proto3" json:"players_required,omitempty"`
	QualifiedPlayers []string `protobuf:"bytes,3,rep,name=qualified_players,json=qualifiedPlayers,proto3" json:"qualified_players,omitempty"`
}

func (x *RoundStateMessage) Reset() {
	*x = RoundStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundStateMessage) ProtoMessage() {}

func (x *RoundStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundStateMessage.ProtoReflect.Descriptor instead.
func (*RoundStateMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *RoundStateMessage) GetCurrentRound() int32 {
	if x != nil {
		return x.CurrentRound
	}
	return 0
}

func (x *RoundStateMessage) GetPlayersRequired() int32 {
	if x != nil {
		return x.PlayersRequired
	}
	return 0
}

func (x *RoundStateMessage) GetQualifiedPlayers() []string {
	if x != nil {
		return x.QualifiedPlayers
	}
	return nil
}

type PlayerIndexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerIndex int32 `protobuf:"varint,1,opt,name=player_index,json=playerIndex,proto3" json:"player_index,omitempty"` // 몇 번째 플레이어인지
}

func (x *PlayerIndexMessage) Reset() {
	*x = PlayerIndexMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIndexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIndexMessage) ProtoMessage() {}

func (x *PlayerIndexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIndexMessage.ProtoReflect.Descriptor instead.
func (*PlayerIndexMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerIndexMessage) GetPlayerIndex() int32 {
	if x != nil {
		return x.PlayerIndex
	}
	return 0
}

type PlayerGrabInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CurrentGrab bool   `protobuf:"varint,2,opt,name=current_grab,json=currentGrab,proto3" json:"current_grab,omitempty"`
}

func (x *PlayerGrabInfo) Reset() {
	*x = PlayerGrabInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGrabInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGrabInfo) ProtoMessage() {}

func (x *PlayerGrabInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGrabInfo.ProtoReflect.Descriptor instead.
func (*PlayerGrabInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *PlayerGrabInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerGrabInfo) GetCurrentGrab() bool {
	if x != nil {
		return x.CurrentGrab
	}
	return false
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x72, 0x7a, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x2a, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9e, 0x01,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x69, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x83,
	0x01, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x02, 0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x02, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x02, 0x72, 0x7a, 0x22, 0x2b, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x11, 0x52, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0e, 0x52, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xd2, 0x06, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x0b,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x13, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x63, 0x65, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x61,
	0x63, 0x65, 0x45, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3e, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x9c, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x65, 0x64, 0x22,
	0x64, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x90, 0x01, 0x0a,
	0x11, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22,
	0x37, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x50, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x42, 0x0d, 0x5a, 0x0b, 0x47, 0x6f,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_messages_proto_goTypes = []any{
	(*PlayerPosition)(nil),        // 0: game.PlayerPosition
	(*ChatMessage)(nil),           // 1: game.ChatMessage
	(*LoginMessage)(nil),          // 2: game.LoginMessage
	(*PlayerAnimation)(nil),       // 3: game.PlayerAnimation
	(*SpawnPlayer)(nil),           // 4: game.SpawnPlayer
	(*LogoutMessage)(nil),         // 5: game.LogoutMessage
	(*RaceFinishMessage)(nil),     // 6: game.RaceFinishMessage
	(*CostumeMessage)(nil),        // 7: game.CostumeMessage
	(*RaceEndMessage)(nil),        // 8: game.RaceEndMessage
	(*GameMessage)(nil),           // 9: game.GameMessage
	(*MatchingRequest)(nil),       // 10: game.MatchingRequest
	(*MatchingResponse)(nil),      // 11: game.MatchingResponse
	(*MatchingUpdate)(nil),        // 12: game.MatchingUpdate
	(*MatchingMessage)(nil),       // 13: game.MatchingMessage
	(*SpectatorStateMessage)(nil), // 14: game.SpectatorStateMessage
	(*PlayerCountUpdate)(nil),     // 15: game.PlayerCountUpdate
	(*RoundStateMessage)(nil),     // 16: game.RoundStateMessage
	(*PlayerIndexMessage)(nil),    // 17: game.PlayerIndexMessage
	(*PlayerGrabInfo)(nil),        // 18: game.PlayerGrabInfo
}
var file_messages_proto_depIdxs = []int32{
	0,  // 0: game.GameMessage.player_position:type_name -> game.PlayerPosition
	1,  // 1: game.GameMessage.chat:type_name -> game.ChatMessage
	2,  // 2: game.GameMessage.login:type_name -> game.LoginMessage
	3,  // 3: game.GameMessage.player_anim_state:type_name -> game.PlayerAnimation
	4,  // 4: game.GameMessage.spawnPlayer:type_name -> game.SpawnPlayer
	4,  // 5: game.GameMessage.spawnExistingPlayer:type_name -> game.SpawnPlayer
	5,  // 6: game.GameMessage.logout:type_name -> game.LogoutMessage
	6,  // 7: game.GameMessage.race_finish:type_name -> game.RaceFinishMessage
	7,  // 8: game.GameMessage.player_costume:type_name -> game.CostumeMessage
	8,  // 9: game.GameMessage.race_end:type_name -> game.RaceEndMessage
	14, // 10: game.GameMessage.spectator_state:type_name -> game.SpectatorStateMessage
	15, // 11: game.GameMessage.player_count:type_name -> game.PlayerCountUpdate
	17, // 12: game.GameMessage.playerIndex:type_name -> game.PlayerIndexMessage
	18, // 13: game.GameMessage.playerGrabInfo:type_name -> game.PlayerGrabInfo
	10, // 14: game.MatchingMessage.matching_request:type_name -> game.MatchingRequest
	11, // 15: game.MatchingMessage.matching_response:type_name -> game.MatchingResponse
	12, // 16: game.MatchingMessage.matching_update:type_name -> game.MatchingUpdate
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LoginMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SpawnPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RaceFinishMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CostumeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RaceEndMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GameMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MatchingUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MatchingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SpectatorStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerCountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RoundStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerIndexMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerGrabInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[9].OneofWrappers = []any{
		(*GameMessage_PlayerPosition)(nil),
		(*GameMessage_Chat)(nil),
		(*GameMessage_Login)(nil),
		(*GameMessage_PlayerAnimState)(nil),
		(*GameMessage_SpawnPlayer)(nil),
		(*GameMessage_SpawnExistingPlayer)(nil),
		(*GameMessage_Logout)(nil),
		(*GameMessage_RaceFinish)(nil),
		(*GameMessage_PlayerCostume)(nil),
		(*GameMessage_RaceEnd)(nil),
		(*GameMessage_SpectatorState)(nil),
		(*GameMessage_PlayerCount)(nil),
		(*GameMessage_PlayerIndex)(nil),
		(*GameMessage_PlayerGrabInfo)(nil),
	}
	file_messages_proto_msgTypes[13].OneofWrappers = []any{
		(*MatchingMessage_MatchingRequest)(nil),
		(*MatchingMessage_MatchingResponse)(nil),
		(*MatchingMessage_MatchingUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
